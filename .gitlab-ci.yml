image: registry.gitlab.com/guided-explorations/containers/aws-cli-tools/aws-cli

variables:
  AWS_DEFAULT_REGION: 'us-east-1'
  TEMPLATE_LIST: 'CloudFormationUltimateAWSASGLabKit.cf.yml'
  #if null, find all files containing *.cf.* in all subfolders and sort them in pathname order
  #if present, only:
  #  1. process the listed files (without requiring ''.cf.' in filename)
  #  2. in the order provided - will be processed 
  SERIALIZED_EXECUTION: ''
  #if null, submit all templates for synchronous execution, otherwise wait for each template to finish before submitting another
  CFNLINTARGS: '--ignore-checks W'
  # override to '' or other args in CI/CD Vars if desired 

get-cf-list:
  stage: .pre
  script:
    - |
      echo "Figuring out the template list and storing it in cftemplates.lst"
      if [[ ! -n "$TEMPLATE_LIST" ]]; then
        echo "\$TEMPLATE_LIST is empty, finding and sorting all files in directory tree with pattern *.cf.* ..."
        TEMPLATE_LIST=$(find . -name '*.cf.*' -type f -printf "%p|" | sort -n -z)
      fi
      
      echo "Template list: $TEMPLATE_LIST"

      echo "$TEMPLATE_LIST" > cftemplates.lst

  artifacts:
    paths:
      - cftemplates.lst    

cf-lint:
  stage: test   
  script:
    - |
      #pip install cfn-lint
      echo "Linting all cloudformation files..."

      RESOLVED_TEMPLATE_LIST="$(cat cftemplates.lst)"
      echo "Template list: $RESOLVED_TEMPLATE_LIST"

      OIFS=$IFS;
      IFS="|";
      cffiles=($RESOLVED_TEMPLATE_LIST)
      IFS=$OIFS

      for cftemplate in "${cffiles[@]}"
      do
        echo "  ${cftemplate}"
        cfn-lint --template ${cftemplate} --region ${AWS_DEFAULT_REGION} ${CFNLINTARGS} --format junit > cfn-lint-test-results.xml || true
        cfn-lint --template ${cftemplate} --region ${AWS_DEFAULT_REGION} ${CFNLINTARGS}

      done

  artifacts:
    reports:
      junit: "*.xml"

.cf-changeset:
  stage: changset
  script:
    - |
      for i in $(printenv | sed 's;=.*;;' | grep 'CF_'); do cfparams="${cfparams} ParameterKey=${i#CF_},ParameterValue=${!i}"; done;
      echo $cfparams
      
      $RESOLVED_TEMPLATE_LIST=$(cat cftemplates.lst)

      OIFS=$IFS;
      IFS="|";
      cffiles=($RESOLVED_TEMPLATE_LIST)
      IFS=$OIFS

      for cftemplate in "${cffiles[@]}"
      do
        echo ${cftemplate} aws cli command here
        if [[ ! -z ${SORT_AND_SERIALIZE} ]]; then
          echo "wait for cf stack status"
        fi
      else


      aws cloudformation create-stack  --stack-name startmyinstance  
        --template-body file://home/ec2-user/templates/startmyinstance.json 
        --parameters $cfparams