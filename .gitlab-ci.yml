image: registry.gitlab.com/guided-explorations/containers/aws-cli-tools/aws-cli

variables:
  AWS_DEFAULT_REGION: 'us-east-1'
  TEMPLATE_LIST: ''
  #if present, only these files - in the order provided - will be processed 
  # (overrides .cf. naming requirement), overrides SERIALIZED_EXECUTION
  #if null, find all files containing *.cf.* in all subfolders and sort them in pathname order
  SERIALIZED_EXECUTION: ''
  #if null, submit all templates for synchronous execution, otherwise wait for each template to finish before submitting another

cf-lint:
  stage: test
  variables:
    CFNLINTARGS: --ignore-checks W
    # override to '' or other args in CI/CD Vars if desired 
  script:
    - |
      #pip install cfn-lint
      set -xv
      echo "Linting all cloudformation files..."
      
      if [[ ! -n "$TEMPLATE_LIST" ]]; then
        echo "\$TEMPLATE_LIST is empty, finding and sorting all files in directory tree with pattern *.cf.* ..."
        TEMPLATE_LIST=$(find . -name '*.cf.*' -type f -printf "%p|" | sort -n -z)
      fi

      echo "Template list: $TEMPLATE_LIST"

      OIFS=$IFS;
      IFS="|";
      args=($TEMPLATE_LIST)

      #IFS="," GLOBIGNORE='*' args=($(echo "$TEMPLATE_LIST" \
      #| xargs -0 bash -c 'for arg in "$@"; do echo "$arg"; done'))
      for cftemplate in "${args[@]}"
      do
        echo "  ${cftemplate}"
        cfn-lint ${CFNLINTARGS} --region ${AWS_DEFAULT_REGION} --template ${cftemplate}  --format junit > ${cftemplate}.xml || true
        cfn-lint ${CFNLINTARGS} --region ${AWS_DEFAULT_REGION} --template ${cftemplate}
      done

  artifacts:
    reports:
      junit: "*.xml"

.cf-changeset:
  stage: changset
  script:
    - |
      for i in $(printenv | sed 's;=.*;;' | grep 'CF_'); do cfparams="${cfparams} ParameterKey=${i#CF_},ParameterValue=${!i}"; done;
      echo $cfparams
      
      
      find . -name '*.cf.*' -type f -printf "\"%p\" " | sort -n -z | while read cftemplate;
      do
        echo ${cftemplate} aws cli command here
        if [[ ! -z ${SORT_AND_SERIALIZE} ]]; then
          echo "wait for cf stack status"
        fi
      else


      aws cloudformation create-stack  --stack-name startmyinstance  
        --template-body file://home/ec2-user/templates/startmyinstance.json 
        --parameters $cfparams