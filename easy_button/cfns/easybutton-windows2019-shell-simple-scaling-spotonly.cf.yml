AWSTemplateFormatVersion: '2010-09-09'
Description: >
  Windows 2019 Shell Simple Scaling Spot Instances. 
  Two docker executors, scaling based on simple CPU metrics, only spot.
  **Note:** Actual scaling parameters used in this MVP are just to show how to configure scaling - 
  they are untested with Runner workloads - your can help by contributing your tested scaling parameters in an issue.
Parameters:
  3GITLABRunnerInstanceURL:
    Description: >
      The url of the instance that the runner will register (must be reachable from runner instance on port 443 with return conversations).
    Type: String
    Default: https://gitlab.com/
  3GITLABRunnerRegTokenList:
    Description: One or more runner tokens to register (semicolon delimited)
    Type: String
    NoEcho: true
    AllowedPattern: .+
  3GITLABRunnerTagList:
    Description: >
      Optional tags to identify the runner (comma delimited) in GitLab and AWS Instance tags to identify things like what team or person the runner is for.
      The runner will automatically have tags for the operating system platform, whether compute is spot or ondemand and the executor type.
      Ec2 tags will also include the runner name and the gitlab instance url. Except for Linux Docker, other runner types will require tags to be specified in jobs.
    Type: String
  4ASGSpecifyVPC:
    Description: >
      DefaultVPC - finds the VPC and configures all of its subnets for you. Otherwise type in the VPC id of a VPC in the same region where you run the template. 
      All subnets and azs of the chosen vpc will be used.
      The VPC and chosen subnets must be setup in a way that allows the runner instances to resolve the DNS name and connect
      to port 443 on the GitLab instance URL you provide.
    Type: String
    Default: DefaultVPC
  5ASGInstanceType1:
    Description: >
      Specify the instance type to be used.  Do not use bursty instance types like t2 or t3.
    Type: String
    Default: "m5.large"
    AllowedPattern: ^[A-Za-z0-9.]+$
Resources:
  RnrASG:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: https://gl-public-templates.s3.amazonaws.com/cfn/v1.4.3-alpha8/GitLabElasticScalingRunner.cf.yml
      Tags:
        - Key: Product
          Value: GitLab
        - Key: Function
          Value: GitLabRunner
      Parameters:
        1OSPeggedAMIID: AlwaysUseLatest
        1OSInstanceOSPlatform: Windows
        1OSPatchScope: NoPatching
        3GITLABRunnerInstanceURL: !Ref 3GITLABRunnerInstanceURL
        3GITLABRunnerRegTokenList: !Ref 3GITLABRunnerRegTokenList
        3INSTConfigurationScript: https://gitlab.com/guided-explorations/aws/gitlab-runner-autoscaling-aws-asg/-/raw/v1.4.3-alpha8/runner_configs/windows-shell.ps1
        3GITLABRunnerTagList: !Ref 3GITLABRunnerTagList
        4ASGDesiredCapacity: 2
        4ASGSpecifyVPC: !Ref 4ASGSpecifyVPC
        5ASGAutoScalingEnabled: true
        5ASGAutoScalingMaxSize: 10
        5ASGAutoScalingMetricTypeToMonitor: CPU
        5ASGAutoScalingSetScaleOutUtilizationThreshold: 70
        5ASGAutoScalingSetScaleOutUtilizationThresholdSeconds: 60
        5ASGAutoScalingSetScaleInUtilizationThreshold: 40
        5ASGAutoScalingSetScaleInUtilizationThresholdSeconds: 60
        5SPOTOnDemandBaseCapacity: 0
        5SPOTOnDemandPercentageAboveBaseCapacity: 0
        5ASGInstanceType1: !Ref 5ASGInstanceType1
        5ASGInstanceType2: ""
        5ASGInstanceType3: ""
        5ASGInstanceType4: ""
        8DBGKeypairName: ""
        9AWSRetrieveLatestAWSOSAmiIdFromSSM: /aws/service/ami-windows-latest/Windows_Server-2019-English-Full-ContainersLatest